/*
 * Grafeas API
 *
 * An API to insert and retrieve annotations on cloud artifacts.
 *
 * OpenAPI spec version: 0.1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package swagger

// Message encapsulating signature of the verified build
type BuildSignature struct {
	// Public key of the builder which can be used to verify that related Findings are valid and unchanged.  If `key_type` is empty this defaults to PEM encoded public keys.  This field may be empty if `key_id` references an external key.  For Cloud Container Builder based signatures this is a PEM encoded public key. To verify the Cloud Container Builder signature, place the contents of this field into a file (public.pem). The signature field is base64-decoded into its binary representation in signature.bin, and the provenance bytes from BuildDetails are base64-decoded into a binary representation in signed.bin. OpenSSL can then verify the signature: `openssl sha256 -verify public.pem -signature signature.bin signed.bin`
	PublicKey string `json:"publicKey,omitempty"`

	// Signature of the related BuildProvenance, encoded in a base64 string.
	Signature string `json:"signature,omitempty"`

	// An ID for the key used to sign.  This could be either an ID for the key stored in `public_key` (e.g., the ID or fingerprint for a PGP key, or the CN for a cert), or a reference to an external key (e.g., a reference to a key in Cloud KMS).
	KeyId string `json:"keyId,omitempty"`

	// The type of the key, either stored in `public_key` or referenced in `key_id`
	KeyType string `json:"keyType,omitempty"`
}
